apiVersion: apps/v1
kind: Deployment
metadata:
  name: query-frontend
  namespace: monitoring
spec:
  minReadySeconds: 10
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: query-frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: query-frontend
    spec:
      containers:
      - args:
        - -query-frontend.align-queries-with-step=false
        - -query-frontend.cache-results=true
        - -query-frontend.max-cache-freshness=10m
        - -query-frontend.max-total-query-length=12000h
        - -query-frontend.results-cache.backend=memcached
        - -query-frontend.results-cache.memcached.addresses=dnssrvnoa+memcached-frontend.monitoring.svc.cluster.local:11211
        - -query-frontend.results-cache.memcached.timeout=500ms
        - -query-frontend.scheduler-address=query-scheduler-discovery.monitoring.svc.cluster.local:9095
        - -runtime-config.file=/etc/mimir/overrides.yaml
        - -server.grpc.keepalive.min-time-between-pings=10s
        - -server.grpc.keepalive.ping-without-stream-allowed=true
        - -server.http-listen-port=8080
        - -target=query-frontend
        - -usage-stats.installation-mode=jsonnet
        image: grafana/mimir:2.6.0
        imagePullPolicy: IfNotPresent
        name: query-frontend
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            memory: 1200Mi
          requests:
            cpu: "2"
            memory: 600Mi
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      nodeSelector:
        workload: mimir
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            name: query-frontend
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: overrides
        name: overrides
