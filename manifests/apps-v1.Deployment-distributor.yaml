apiVersion: apps/v1
kind: Deployment
metadata:
  name: distributor
  namespace: monitoring
spec:
  minReadySeconds: 10
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: distributor
  strategy:
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 1
  template:
    metadata:
      labels:
        gossip_ring_member: "true"
        name: distributor
    spec:
      containers:
      - args:
        - -distributor.ha-tracker.enable=true
        - -distributor.ha-tracker.enable-for-all-users=true
        - -distributor.ha-tracker.etcd.endpoints=etcd-client.monitoring.svc.cluster.local.:2379
        - -distributor.ha-tracker.prefix=prom_ha/
        - -distributor.ha-tracker.store=etcd
        - -distributor.health-check-ingesters=true
        - -distributor.ingestion-burst-size=200000
        - -distributor.ingestion-rate-limit=10000
        - -distributor.ring.prefix=
        - -distributor.ring.store=memberlist
        - -ingester.ring.heartbeat-timeout=10m
        - -ingester.ring.prefix=
        - -ingester.ring.replication-factor=3
        - -ingester.ring.store=memberlist
        - -mem-ballast-size-bytes=1073741824
        - -memberlist.bind-port=7946
        - -memberlist.join=dns+gossip-ring.monitoring.svc.cluster.local:7946
        - -runtime-config.file=/etc/mimir/overrides.yaml
        - -server.grpc.keepalive.max-connection-age=2m
        - -server.grpc.keepalive.max-connection-age-grace=5m
        - -server.grpc.keepalive.max-connection-idle=1m
        - -server.grpc.keepalive.min-time-between-pings=10s
        - -server.grpc.keepalive.ping-without-stream-allowed=true
        - -server.http-listen-port=8080
        - -target=distributor
        - -usage-stats.installation-mode=jsonnet
        image: grafana/mimir:2.6.0
        imagePullPolicy: IfNotPresent
        name: distributor
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        - containerPort: 7946
          name: gossip-ring
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            memory: 4Gi
          requests:
            cpu: "2"
            memory: 2Gi
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      nodeSelector:
        workload: mimir
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            name: distributor
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          name: overrides
        name: overrides
